# intial setup
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_float = [[1.2, 2.4, 3.3], [4.5, 5.8, 6.7]]
>>> matrix_neg = [[-1, -2, -3], [-4, -5, -6]]
>>> matrix_float_neg = [[-1.2, -2.4, -3.3], [-4.5, -5.8, -6.7]]


# --- TEST USE CASE ---
# test valid matrix int
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided(matrix, 2.0)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# test valid matrix negative int
>>> matrix_divided(matrix_neg, 2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

>>> matrix_divided(matrix_neg, 2.0)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

# test valid matrix float
>>> matrix_divided(matrix_float, 2)
[[0.6, 1.2, 1.65], [2.25, 2.9, 3.35]]

>>> matrix_divided(matrix_float, 2.0)
[[0.6, 1.2, 1.65], [2.25, 2.9, 3.35]]

# test valid matrix negative float
>>> matrix_divided(matrix_float_neg, 2)
[[-0.6, -1.2, -1.65], [-2.25, -2.9, -3.35]]

>>> matrix_divided(matrix_float_neg, 2.0)
[[-0.6, -1.2, -1.65], [-2.25, -2.9, -3.35]]

# --- TEST EXCEPTION ---
# --- test matrix ---
# test None
>>> matrix_divided(None, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test int
>>> matrix_divided(2, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test float
>>> matrix_divided(2.0, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test string
>>> matrix_divided("2", 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test set
>>> matrix_divided({1, 2}, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test dic
>>> matrix_divided({"oops": 2}, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test list
>>> matrix_divided([1, 2], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test tuple
>>> matrix_divided((1, 2), 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test zero division
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

# test invalid matrix
>>> matrix_divided([[1, 2, 3], [1, 2]], 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

# --- test div ---
# test None
>>> matrix_divided(matrix, None)
Traceback (most recent call last):
	...
TypeError: div must be a number

# test string
>>> matrix_divided(matrix, "2")
Traceback (most recent call last):
	...
TypeError: div must be a number

# test set
>>> matrix_divided(matrix, {1, 2})
Traceback (most recent call last):
	...
TypeError: div must be a number

# test dic
>>> matrix_divided(matrix, {"oops": 2})
Traceback (most recent call last):
	...
TypeError: div must be a number

# test list
>>> matrix_divided(matrix, [1, 2])
Traceback (most recent call last):
	...
TypeError: div must be a number

# test tuple
>>> matrix_divided(matrix, (1, 2))
Traceback (most recent call last):
	...
TypeError: div must be a number

# --- TEST INSIDE MATRIX ---
# test None
>>> matrix_divided([[1, 2, 3], [1, 2, None]], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test string
>>> matrix_divided([[1, 2, 3], [1, 2, "3"]], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test set
>>> matrix_divided([[1, 2, 3], [1, 2, {1, 2}]], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test dic
>>> matrix_divided([[1, 2, 3], [1, 2, {"oops": 2}]], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test list
>>> matrix_divided([[1, 2, 3], [1, 2, [1, 2]]], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# test tuple
>>> matrix_divided([[1, 2, 3], [1, 2, (1, 2)]], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats


